diff -ur a/packages/services/Telecomm/src/com/android/server/telecom/CallAudioModeStateMachine.java b/packages/services/Telecomm/src/com/android/server/telecom/CallAudioModeStateMachine.java
--- a/packages/services/Telecomm/src/com/android/server/telecom/CallAudioModeStateMachine.java	Wed Apr 20 08:50:20 2016
+++ b/packages/services/Telecomm/src/com/android/server/telecom/CallAudioModeStateMachine.java	Thu May 12 01:31:40 2016
@@ -153,7 +153,7 @@
                 Log.i(LOG_TAG, "Abandoning audio focus: now UNFOCUSED");
                 mAudioManager.abandonAudioFocusForCall();
                 mAudioManager.setMode(AudioManager.MODE_NORMAL);
-
+                mAudioManager.setParameters("realcall=off");
                 mMostRecentMode = AudioManager.MODE_NORMAL;
                 mCallAudioManager.setCallAudioRouteFocusState(CallAudioRouteStateMachine.NO_FOCUS);
             }
@@ -305,6 +305,7 @@
                 } else if (phoneId == 1) {
                     mAudioManager.setParameters("phone_type=cp2");
                 }
+                mAudioManager.setParameters("realcall=on");
             }
 
             mAudioManager.setMode(AudioManager.MODE_IN_CALL);
@@ -364,15 +365,25 @@
 
         private int getPhoneId(Call call) {
             if (call.getTargetPhoneAccount() != null) {
-                PhoneAccountHandle account = call.getTargetPhoneAccount();
                 try {
-                    int index = Integer.parseInt(account.getId());
-                    int phoneId = SubscriptionManager.getPhoneId(index);
+                    int phoneId = 0;
+                    SubscriptionInfo SimInfo1 = SubscriptionManager.getActiveSubscriptionInfoForSimSlotIndex(0);
+                    SubscriptionInfo SimInfo2 = SubscriptionManager.getActiveSubscriptionInfoForSimSlotIndex(1);
+                    long ID1 = Long.valueOf(SimInfo1.getSubscriptionId);
+                    long ID2 = Long.valueOf(SimInfo2.getSubscriptionId);
+                    long phone = Long.valueOf(call.getTargetPhoneAccount().getId());
+                    if(ID1 == phone){
+                       phoneId = 0;
+                       Log.i(LOG_TAG, "SIM CALL state phoneId = 0");
+                    }else if(ID2 == phone){
+                       phoneId = 1;
+                       Log.i(LOG_TAG, "SIM CALL state phoneId = 1");
+                    }
                     if (SubscriptionManager.isValidPhoneId(phoneId)) {
                         return phoneId;
                     }
                 } catch (NumberFormatException e) {
-                    Log.e(LOG_TAG, e, "Cannot get phoneId from ID value " + account.getId());
+                    Log.e(LOG_TAG, e, "Cannot get phoneId from ID value " + call.getTargetPhoneAccount().getId());
                 }
             }
             return -1;
